/*
 * This source file was generated by the Gradle 'init' task
 */
package org.example;

import com.sun.source.util.JavacTask;
import com.sun.tools.javac.api.JavacTool;
import com.sun.tools.javac.file.JavacFileManager;
import com.sun.tools.javac.util.Context;
import com.sun.tools.javac.util.List;

import javax.annotation.processing.Processor;
import javax.tools.JavaFileObject;
import java.io.*;
import java.util.Collections;

public class App {

    public static void main(String[] args) {
        // Print the JVM version
        System.out.println("Java version: " + System.getProperty("java.version"));

        Context context = new Context();
        DiagListener diagListener = new DiagListener(context);

        JavacTool javacTool = JavacTool.create();

        JavacFileManager standardFileManager = javacTool.getStandardFileManager(diagListener, null, null);
        Iterable<? extends JavaFileObject> compilationUnits = standardFileManager.getJavaFileObjectsFromFiles(
                Collections.singletonList(
                        new File(App.class.getResource("/FileWithWarning.java").getFile())
                )
        );
        Iterable<String> options = List.of(
                "-Xlint:all"
        );

        JavacTask task = javacTool.getTask(null, standardFileManager, diagListener, options, null, compilationUnits, context);

        // BUG: By toggling this line, the compilation will succeed or fail
        task.setProcessors(Collections.singletonList(new InAppProcessor()));
        // =================================================================

        System.out.println("===");
        Boolean success = task.call();
        System.out.println("Compilation " + (success ? "succeeded" : "failed"));
        System.out.println("===");
    }

}
